#LyX 1.6.9 created this file. For more info see http://www.lyx.org/
\lyxformat 345
\begin_document
\begin_header
\textclass report
\use_default_options true
\language english
\inputencoding auto
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\author "" 
\author "" 
\end_header

\begin_body

\begin_layout Title
Reduced Implicate Tree Journal
\end_layout

\begin_layout Title
Thomas Przybylinski
\end_layout

\begin_layout Subsection*
Story before journal:
\end_layout

\begin_layout Standard
I created a program to compute the implicates of a boolean formula, and
 put it in a Reduced Implicate Trie.
 I also was able to export the tries to a Graphiz format and export as pictures
 in-program.
 With the pictures, I can look at them.
 However, it was getting sort of messy, so I decided to refactor them.
\end_layout

\begin_layout Section*
03/12/11
\end_layout

\begin_layout Standard
I finished refactoring my code.
 The three basic units of execution are the 
\emph on
FormulaCreator, FormulaTask, 
\emph default
and
\emph on
 FormulaExecutor.

\emph default
 The 
\emph on
FormulaCreator
\emph default
 creates new formula of a certain type on the fly.
 The 
\emph on
FormulaTask
\emph default
 does some sort of analysis of the forumla and prints out per-iteration
 and aggregate statistics.
 The FormulaExecutor just does the execution.
 The creator and task are and abstract class and interface, respectively.
 The executor is just a helper class.
\end_layout

\begin_layout Standard
Previously, I had been creating random 3-SAT problems, but I didn't think
 that gave me enough power to be able to look at the trie and figure things
 out.
 What I decided I needed was a way of randomly filling a truth table.
 I've decided to start with sparse instances (where true rows on the truth
 table are a relatively small compared to the falses, or vice versa).
 It's relatively simple.
 When I want just a few rows of the truth table to be true, I just use DNF
 with clauses that contain all the variables, with some negated.
 If I want just a few rows to be false, I just negate that DNF.
 To faciliate this, I made the 
\emph on
WeakTrueBoolFormula
\emph default
 and 
\emph on
InverseCreator
\emph default
 
\emph on
FormulaCreator
\emph default
s.
 I was only able to do a few tests, today, however.
\end_layout

\begin_layout Section*
03/13/11 
\end_layout

\begin_layout Standard
I looked more closesly at some of the implicate tries for the sparse truth
 tables I talked about earlier.
 To best illustrate, I decided that I wanted truth tables with only one
 truth or false.
\end_layout

\begin_layout Standard
I found some intersting things.
 Because it's simpler, I've decided to show the only one false trie first:
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename oneFalse.jpg
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Formula: ~((~Var0&~Var1&~Var2&~Var3&Var4&Var5))
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
For some reason the variables aren't being ordered the way I want, but I'll
 try and fix that later.
 Of course, what we should notice is that the only implicate is the OR-clause
 we get by distributing the not operation.
 At first I thought there was a bug in my program, but I forgot that this
 represents an OR-clause, not an AND-clause
\end_layout

\end_body
\end_document
